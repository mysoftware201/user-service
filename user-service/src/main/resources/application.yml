#spring.application.name=user-service
#server.port=8081

#spring.datasource.url=jdbc:mysql://localhost:3306/microservices
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update

#eureka.instance.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultzone=http://localhost:8761/eureka



spring:
  config:
    import: configserver:http://localhost:8085
 # config:
  #    import: configserver:http://localhost:8085
    
   # - http://localhost:8085
  
  datasource: 
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update   
    
  application:
    name: user-service
server:
  port: 8081
  
        
#eureka:
 # instance:
  #  prefer-ip-address: true
  #client:
   # fetch-registry: true
    #register-with-eureka: true
    #service-url:
     # defaultzone:  http://localhost:8761/eureka
      
      
#implement reselience4j configuration
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
        
  endpoint:
    health:
      show-details: always
      
resilience4j:
  circuitbreaker:
    instances: 
      ratingHotelFallback:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED                          
      
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s
  
  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s











  
         